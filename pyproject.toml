[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anthropic-proxy"
version = "0.1.2"
description = "Proxy that translates between Anthropic API and OpenAI-compatible models"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
dependencies = [
    "fastapi[standard]>=0.115.11",
    "uvicorn>=0.34.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "openai>=1.90.0",
    "python-dotenv>=1.0.0",
    "tiktoken>=0.9.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--import-mode=importlib",
]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "pragma: no cover",
]

[tool.pytest-asyncio]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["models", "server"]

[tool.hatch.build.targets.wheel]
packages = ["."]
exclude = [
    "tests/",
    "*.log",
    "debug/",
    ".env*",
    "uv.lock",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
]

